# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
 sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  Automation-Testing:
    needs: sonarcloud
    runs-on: ubuntu-latest  # Runs on Ubuntu environment

    # Steps to execute within the job
    steps:
      # Step to checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step to set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"  # Version of Python to set up

      # Step to install Chrome WebDriver for Selenium
      - name: Install Chrome WebDriver
        run: |
          LATEST=$(wget -q -O - https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE)
          wget https://storage.googleapis.com/chrome-for-testing-public/$LATEST/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          cd chromedriver-linux64
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      # Step to install Selenium library
      - name: Install Selenium
        run: pip install selenium

      # Step to execute Selenium tests
      - name: Run Selenium tests
        run: python testcase.py

      # # Step to save screenshots if tests succeed
      # - name: Save screenshot to repository
      #   if: ${{ success() }}  # Condition to run only if tests succeed
      #   run: |
      #     git config --global user.email "actions@github.com"
      #     git config --global user.name "GitHub Actions"
      #     git add screenshot_*.png
      #     git commit -m "Add screenshot taken during Selenium test"
      #     git push
  # Single deploy job since we're just deploying
  deploy:
    needs: automation-testing
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
